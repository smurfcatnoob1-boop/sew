name: Kotlin Android Build (Gradle - Son Umut)

on:
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 1. Kaynak Kodu Çıkar
      uses: actions/checkout@v4

    - name: 2. Java 17 Kurulumu (Kotlin/Android için gerekli)
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: 3. Android SDK ve Gradle Cache'i Kur
      uses: actions/cache@v4
      with:
        path: ~/.android/build-cache
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle*') }}

    - name: 4. Gradle Wrapper JAR'ı İndir ve İzinleri Ver (Kesin Çözüm)
      # JAR dosyasının varlığını kontrol eder ve yoksa indirir, sonra tüm betiklere izin verir.
      run: |
        mkdir -p gradle/wrapper
        JAR_PATH="gradle/wrapper/gradle-wrapper.jar"
        
        # Eğer dosya bozuk veya yoksa indir.
        if [ ! -f $JAR_PATH ] || ! unzip -t $JAR_PATH > /dev/null 2>&1; then
          echo "JAR dosyası bozuk/yok, yeniden indiriliyor..."
          curl -L 'https://repo.maven.apache.org/maven2/org/gradle/wrapper/gradle-wrapper/8.4/gradle-wrapper-8.4.jar' -o $JAR_PATH
        fi
        
        # gradlew ve JAR'a yürütme izinlerini ver
        chmod +x gradlew
        chmod +x $JAR_PATH
        ls -l gradle/wrapper/

    - name: 5. Android SDK ve NDK'yı Ayarla
      uses: android-actions/setup-android@v2

    - name: 6. Android/Gradle ile Derle (Son Atış)
      # Bu adım artık JAR dosyasını görmeli ve asıl derleme hatasına geçmeli.
      run: ./gradlew :android:assembleDebug
      
    - name: 7. Oluşturulan APK'yı Yükle
      uses: actions/upload-artifact@v4
      with:
        name: kotlin-android-apk
        path: android/build/outputs/apk/debug/android-debug.apk
        retention-days: 7
