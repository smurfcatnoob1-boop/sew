apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

dependencies {
    implementation project(":core")
    implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
    // Diğer LibGDX uzantıları buraya eklenecek
}

// BU KISIM, GEREKLİ NATIVE DOSYALARI ZORLA KOPYALAR (NİHAİ ÇÖZÜM)
task copyAndroidNatives(type: Copy) {
    // Native JAR dosyalarından .so uzantılı dosyaları bul
    from(configurations.debugRuntimeClasspath.filter { it.name.endsWith('jar') && it.name.contains('natives') }.collect { zipTree(it) })
    // Onları, jniLibs.srcDirs'ın göreceği 'libs' klasörüne koy
    into 'libs' 
}
// Gelişmiş Erken Uyarı Sistemi (EWS): Derleme başlamadan önce bu zorla kopyalama görevini çalıştır.
// Eğer kopyalama başarısız olursa, derleme hemen Kırmızı X ile durur.
tasks.findByName('preBuild').dependsOn copyAndroidNatives


android {
    namespace 'com.sevgili.oyunu.android'
    compileSdk rootProject.ext.androidCompileSdkVersion
    
    defaultConfig {
        applicationId rootProject.ext.appName
        minSdk rootProject.ext.androidMinSdkVersion
        targetSdk rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    // LibGDX'in native dosyaları arayacağı yeri kesin olarak gösteren kural
    sourceSets {
        main {
            jniLibs.srcDirs = ["libs"]
        }
    }
    
    // Çakışmaya neden olan tüm splits, packagingOptions, ndk blokları TEMİZLENMİŞTİR.
}
